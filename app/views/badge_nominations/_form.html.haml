= simple_form_for(@badge_nomination) do |f|
  = f.error_notification

  .form-inputs
    - if librarian_or_admin?
      #user_id.large-3.small-3.columns= f.association :nominator, collection: User.order(:name), label_method: :short, label: 'Nominator', include_blank: true
    - else
      #user_id.large-3.small-3.columns= f.association :nominator, collection: User.order(:name), label_method: :short, label: 'Nominator', include_blank: true, selected: @nominator.try(:id)
    .large-9.small.6.columns
      Description for
      %strong= @badge.try(:name_with_focus)
      %br
      = @badge.try(:description)
    %hr
    .row
      .large-3.small-3.columns
        #user_id= f.association :user, label: 'Nominee'
        - if params[:badge_id]
          = f.hidden_field :badge_id, value: params[:badge_id]
        - else
          #badge_id= f.association :badge, collection: Badge.accepted.order(:name), label_method: :name_with_focus
        - if @badge.try(:has_no_levels?)
          #level= f.input :level_nominated, disabled: true, label: 'This badge has no levels.'
        - else
          #level= f.input :level_nominated, collection: @badge.try(:detailed_levels)
      .large-9.small-12.columns= f.input :evidence, label: 'Evidence and examples for this nomination', input_html: {rows: 5}
    - if librarian_or_admin?
      %div.admin-only.row
        .large-4.small-4.columns= f.input :status, collection: [['Pending', 'pending'], ['Accepted', 'accepted'], ['Expired', 'expired']]
        .large-4.small-4.columns= f.input :level_granted, collection: @badge.try(:detailed_levels)
        .large-4.small-4.columns= f.input :effective_date, include_blank: true
    - else
      = f.input :status, collection: [['Pending', 'pending']]      
    %hr

  .form-actions
    = f.button :submit, 'Create/Update Badge Nomination'
