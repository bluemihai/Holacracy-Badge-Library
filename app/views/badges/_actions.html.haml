- if badge.status == 'draft'
  %span.green= link_to 'Edit', edit_badge_path(badge)
- elsif librarian_or_admin?
  %span.green.admin-only= link_to 'Edit', edit_badge_path(badge)

- if librarian_or_admin?
  \|
  %span.green.admin-only= link_to 'Destroy', badge, method: :delete, data: { confirm: 'Are you sure you want to permanently delete this badge?' }
  - if badge.status == 'proposed'
    \|
    - if bo = BadgeObjection.find_by(badge_id: badge.id, librarian: 7)
      = bo.objection ? 'Chris objected' : 'Chris non-objected'
    - else
      %span.green.admin-only= link_to 'Non-Object as Chris', accept_badge_path(badge, librarian_id: 7)
    \|
    - if bo = BadgeObjection.find_by(badge_id: badge.id, librarian: 12)
      = bo.objection ? 'Laura objected' : 'Laura non-objected'
    - else
      %span.green.admin-only= link_to 'Non-Object as Laura', accept_badge_path(badge, librarian_id: 12)    
    \|
    %span.green.admin-only= link_to 'Object', reject_badge_path(badge)
- if badge.status == 'draft'
  \|
  %span.green= link_to 'Propose', propose_badge_path(badge)
- if badge.status == 'accepted'
  \|
  %span.green= link_to 'Remove', request_removal_badge_path(badge), title: 'Request removal, actually.  This takes effect when all Badge Librarians non-object, or if they take no action within 7 days'
- if badge.has_focus?
  \|
  %span.green= link_to 'Duplicate', new_badge_path(template_id: badge.id), title: 'Open up new badge form, with new focus but all other fields exactly the same.'